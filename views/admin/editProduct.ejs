<%- include('../layouts/admin/header.ejs') %>

    <head>
        <style>
            .thumbnails-container {
                display: flex;
                overflow-x: auto;
            }


            .thumbnail {
                margin-right: 10px;
            }

            .input-upload {
                position: relative;
            }


            .error-message {
                color: red;
                display: none;
            }
        </style>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    </head>


    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" name="productName" value="<%= product.productName %>"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <% for(let i=0; i < brand.length; i++) { %>
                                        <option value="<%= brand[i].brandName %>" <%=product.brand &&
                                            brand[i].brandName===product.brand.brandName ? 'selected' : '' %>> <%=
                                                brand[i].brandName %>
                                        </option>
                                        <% } %>
                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea name="description" class="form-control border"
                                    rows="4"><%= product.description %></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="â‚¹" name="regularPrice" type="text"
                                            value="<%= product.realPrice %>" class="form-control border">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input name="salePrice" type="text" value="<%= product.salePrice %>"
                                            class="form-control border">
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input name="quantity" type="text" value="<%= product.quantity %>"
                                            class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="mb-4"> <label class="form-label">Add Offer</label> <input
                                            placeholder="%" name="productOffer" type="number"
                                            class="form-control border" min="0" max="100"> </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-4"> <label class="form-label">Delete Offer</label> <button
                                            type="button" class="btn btn-secondary form-control"
                                            onclick="deleteOffer('<%= product._id %>')">Delete Offer</button> </div>
                                </div>
                            </div>

                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" name="category">
                                                <% for(let i=0; i < category.length; i++) { %>
                                                    <option value="<%= category[i]._id %>"
                                                        <%=category[i]._id.toString()===product.category._id.toString()
                                                        ? 'selected' : '' %>> <%= category[i].name %>
                                                    </option>
                                                    <% } %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <% if (product.productImage && product.productImage.length > 0) { %> 
                                    <% for (let i = 0; i < product.productImage.length; i++) { %>
                                        <div class="col-md-12" id="image-container-<%= product.productImage[i] %>">
                                            <div class="mb-4">
                                                <div class="col-12"> 
                                                    <input type="hidden" value="<%= product.productImage[i] %>" id="imageDatas"> 
                                                    <img class="rounded" style="width: 50px; height: 60px;" 
                                                         src="/img/products/<%= product.productImage[i] %>" alt=""> 
                                                    <i onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>')" 
                                                       style="position: absolute; margin-left: .5rem; cursor: pointer;" 
                                                       class="fa fa-times delete-icon"></i> 
                                                </div>
                                            </div>
                                        </div>
                                    <% } %>
                                <% } %>
                                
                                                <div class="card-body">
                                                    <div class="card-body align-items-center"
                                                        style="margin-bottom: 20px;">
                                                        <img src="" alt="" id="imgView1">
                                                        <input class="form-control" type="file" name="images"
                                                            id="input1" accept="image/png, image/jpeg, image/jpg"
                                                            onchange="viewImage1(event), viewImage(event, 1)">
                                                        <div id="images-error" class="error-message"></div>
                                                    </div>
                                                    <div class="image-cropper d-flex align-items-center"
                                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                        <img src="" id="croppedImg1" alt="">
                                                        <button type="button" id="saveButton1"
                                                            class="btn-sm btn-primary">Save</button>
                                                    </div>
                                                    <div class="row">
                                                        <div class="card-body align-items-center"
                                                            style="margin-bottom: 20px;">
                                                            <img src="" alt="" id="imgView2">
                                                            <input class="form-control" type="file" name="images"
                                                                id="input2" accept="image/png, image/jpeg, image/jpg"
                                                                onchange="viewImage2(event), viewImage(event, 2)">
                                                        </div>
                                                        <div class="image-cropper d-flex align-items-center"
                                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                            <img src="" id="croppedImg2" alt="">
                                                            <button type="button" id="saveButton2"
                                                                class="btn-sm btn-primary">Save</button>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="card-body align-items-center"
                                                            style="margin-bottom: 20px;">
                                                            <img src="" alt="" id="imgView3">
                                                            <input class="form-control" type="file" name="images"
                                                                id="input3" accept="image/png, image/jpeg, image/jpg"
                                                                onchange="viewImage3(event), viewImage(event, 3)">
                                                        </div>
                                                        <div class="image-cropper d-flex align-items-center"
                                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                            <img src="" id="croppedImg3" alt="">
                                                            <button type="button" id="saveButton3"
                                                                class="btn-sm btn-primary">Save</button>
                                                        </div>
                                                    </div>
                                                </div>
                            </div>
                            <div>
                                <button class="btn btn-md rounded font-sm hover-up btn-primary" id="updatebtn" type="submit"
                                    onclick="validateAndSubmit()">Update Product</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>


    <script>
        function validateAndSubmit() {
            if (validateForm()) {
                document.forms[0].submit();
            }
        }

        function validateForm() {
            let imageDatas = false;
            clearErrorMessages();
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementsByName('description')[0].value;
            const brand = document.getElementsByName('brand')[0].value;
            const price = document.getElementsByName('regularPrice')[0].value;
            const saleprice = document.getElementsByName('salePrice')[0].value;
            const category = document.getElementsByName('category')[0].value;
            const images = document.getElementById('input1');
            const quantity = document.getElementsByName('quantity')[0].value;
            imageDatas = document.getElementById("imageDatas")?.value;

            let isValid = true;
            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            }

            if (description === '') {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            }

            if (parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }
            // if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
            //     // displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
            //     isValid = false;
            // }

            if (!imageDatas && images.files.length === 0) {
                displayErrorMessage("images-error", 'Please select an image.');
                isValid = false;
            }
            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
            });
        }

        function viewImage1(event) {
            document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage2(event) {
            document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage3(event) {
            document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage(event, index) {
            let input = event.target;
            let reader = new FileReader();
            reader.onload = function () {
                let dataURL = reader.result;
                let image = document.getElementById('imgView' + index);
                image.src = dataURL;
                let cropper = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    guides: true,
                    background: false,
                    autoCropArea: 1,
                    zoomable: true,
                    crop(event) {
                        const canvasData = cropper.getCanvasData();
                        cropper.setCanvasData({
                            left: 0,
                            top: 0,
                            width: canvasData.width,
                            height: canvasData.height,
                        });
                    }
                });
                let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                cropperContainer.style.display = 'block';
                let saveButton = document.querySelector('#saveButton' + index);
                saveButton.addEventListener('click', async function () {
                    let croppedCanvas = cropper.getCroppedCanvas({
                        width: 300,
                        height: 300
                    });
                    let croppedImage = document.getElementById("croppedImg" + index);
                    croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                    let timestamp = new Date().getTime();
                    let fileName = `cropped-img-${timestamp}-${index}.png`;
                    await croppedCanvas.toBlob(blob => {
                        let input = document.getElementById('input' + index);
                        let imgFile = new File([blob], fileName, { type: 'image/jpeg' });
                        const fileList = new DataTransfer();
                        fileList.items.add(imgFile);
                        input.files = fileList.files;
                    });
                    cropperContainer.style.display = 'none';
                });
            };
            reader.readAsDataURL(input.files[0]);
        }

    </script>

<script>
    function deleteSingleImage(imageName, productId) {
        console.log('Attempting to delete image:', imageName, 'for product:', productId);

        $.ajax({
            url: `/admin/deleteImage`,
            method: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ imageName, productId }),
            success: (response) => {
                console.log('Server response:', response);
                if (response.status === true) {
                    // Remove the deleted image from the UI dynamically
                    const imageElement = document.getElementById(`image-container-${imageName}`);
                    if (imageElement) {
                        imageElement.remove();
                        console.log('Image removed from UI.');
                    }
                } else {
                    alert(response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error('AJAX error:', error);
                alert('An error occurred while deleting the image.');
            }
        });
    }
</script>

    <script> 
    function deleteOffer(productId) { 
        Swal.fire({ 
            title: 'Are you sure?', 
            text: "This will remove the offer from the product.", 
            icon: 'warning', 
            showCancelButton: true, 
            confirmButtonColor: '#3085d6', 
            cancelButtonColor: '#d33', 
            confirmButtonText: 'Yes, delete it!' 
            }).then((result) => { 
                if (result.isConfirmed) { 
                    const form = document.createElement('form'); 
                    form.method = 'POST'; 
                    form.action = '/admin/products/deleteOffer/' + productId; 
                    const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content'); 
                    const tokenInput = document.createElement('input'); 
                    tokenInput.type = 'hidden'; 
                    tokenInput.name = '_csrf'; 
                    tokenInput.value = csrfToken; 
                    form.appendChild(tokenInput); 
                    document.body.appendChild(form); 
                    form.submit(); 
                    } 
                }); 
            } 
            
    </script>


<style>
    /* Base styles */
body {
    font-family: Arial, sans-serif;
    background-color: #181818;
    color: #f5f5f5;
    margin: 0;
    padding: 0;
}

.content-main {
    padding: 2rem;
    display: flex;
    justify-content: center;
}

.row {
    width: 100%;
    max-width: 1200px;
}

/* Card styles */
.card {
    background-color: #242424;
    border: none;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    color: #f5f5f5;
    margin-bottom: 2rem;
}

.card-header {
    background-color: #333333;
    padding: 15px;
    border-bottom: 1px solid #444;
    border-radius: 10px 10px 0 0;
}

.card-body {
    padding: 1.5rem;
}

/* Form elements */
.form-label {
    color: #00d1ff;
    margin-bottom: 0.5rem;
    font-weight: 500;
}

.form-control {
    background-color: #333333;
    border: 1px solid #444;
    color: #f5f5f5;
    padding: 0.75rem;
    border-radius: 5px;
    transition: all 0.3s ease;
}

.form-control:focus {
    background-color: #3a3a3a;
    border-color: #00d1ff;
    box-shadow: 0 0 0 2px rgba(0, 209, 255, 0.25);
    outline: none;
}

.form-select {
    background-color: #333333;
    border: 1px solid #444;
    color: #f5f5f5;
    padding: 0.75rem;
    border-radius: 5px;
}

/* Buttons */
.btn {
    padding: 0.75rem 1.5rem;
    border-radius: 5px;
    font-weight: 500;
    transition: all 0.3s ease;
}

.btn-primary {
    background-color: #00d1ff;
    border: none;
    color: #181818;
}

.btn-primary:hover {
    background-color: #00a1cc;
}

.btn-secondary {
    background-color: #444;
    border: none;
    color: #f5f5f5;
}

.btn-secondary:hover {
    background-color: #555;
}

/* Image preview */
.rounded {
    border-radius: 5px;
    border: 2px solid #444;
}

/* Error messages */
.error-message {
    color: #ff4d4d;
    font-size: 0.875rem;
    margin-top: 0.25rem;
}

.content-header {
    margin-bottom: 2rem;
    text-align: center;
}

.content-title {
    color: #00d1ff;
    font-size: 2rem;
    font-weight: 600;
}

.image-cropper {
    background-color: #333333;
    border-radius: 5px;
    padding: 1rem;
    margin-bottom: 1rem;
}

#imgView1, #imgView2, #imgView3 {
    max-width: 100%;
    height: auto;
    margin-bottom: 1rem;
}

@media (max-width: 992px) {
    .content-main {
        padding: 1rem;
    }
    
    .row {
        flex-direction: column;
    }
    
    .col-lg-6 {
        width: 100%;
    }
}
</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>


    <%- include('../layouts/admin/footer.ejs') %>

    








