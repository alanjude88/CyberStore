<%- include('../layouts/admin/header.ejs') %>

    <head>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">

        
    </head>

  
<style>
    /* Base styles */
body {
    font-family: Arial, sans-serif;
    background-color: #181818;
    color: #f5f5f5;
    margin: 0;
    padding: 0;
}

.content-main {
    padding: 2rem;
    display: flex;
    justify-content: center;
}

.row {
    width: 100%;
    max-width: 1200px;
}

/* Card styles */
.card {
    background-color: #242424;
    border: none;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    color: #f5f5f5;
    margin-bottom: 2rem;
}

.card-header {
    background-color: #333333;
    padding: 15px;
    border-bottom: 1px solid #444;
    border-radius: 10px 10px 0 0;
}

.card-header h4 {
    color: #00d1ff;
    margin: 0;
}

.card-body {
    padding: 1.5rem;
}

/* Form elements */
.form-label {
    color: #00d1ff;
    margin-bottom: 0.5rem;
    font-weight: 500;
}

.form-control {
    background-color: #333333;
    border: 1px solid #444;
    color: #f5f5f5;
    padding: 0.75rem;
    border-radius: 5px;
    transition: all 0.3s ease;
}

.form-control::placeholder {
    color: #888;
}

.form-control:focus {
    background-color: #3a3a3a;
    border-color: #00d1ff;
    box-shadow: 0 0 0 2px rgba(0, 209, 255, 0.25);
    outline: none;
}

.form-select {
    background-color: #333333;
    border: 1px solid #444;
    color: #f5f5f5;
    padding: 0.75rem;
    border-radius: 5px;
    width: 100% !important;
}

/* Buttons */
.btn {
    padding: 0.75rem 1.5rem;
    border-radius: 5px;
    font-weight: 500;
    transition: all 0.3s ease;
}

.btn-primary {
    background-color: #00d1ff;
    border: none;
    color: #181818;
}

.btn-primary:hover {
    background-color: #00a1cc;
}

.btn-secondary {
    background-color: #444;
    border: none;
    color: #f5f5f5;
}

.btn-secondary:hover {
    background-color: #555;
}

/* Image upload section */
.thumbnails-container {
    padding: 1rem;
    background-color: #333333;
    border-radius: 5px;
    margin-bottom: 1rem;
    min-height: 100px;
}

.image-cropper {
    background-color: #333333;
    border-radius: 5px;
    padding: 1rem;
}

#imgView1 {
    max-width: 100%;
    height: auto;
    margin-bottom: 1rem;
    border-radius: 5px;
}

/* Publish button container */
.publish-button-container {
    display: flex;
    gap: 1rem;
    margin-top: 2rem;
}

.publish-button {
    background-color: #00d1ff;
    color: #181818;
    border: none;
    padding: 0.75rem 2rem;
    border-radius: 5px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
}

.publish-button:hover {
    background-color: #00a1cc;
    transform: translateY(-1px);
}

/* Error messages */
.error-message {
    color: #ff4d4d;
    font-size: 0.875rem;
    margin-top: 0.25rem;
}

/* Content header */
.content-header {
    margin-bottom: 2rem;
    text-align: center;
}

.content-title {
    color: #00d1ff;
    font-size: 2rem;
    font-weight: 600;
}

/* Border styles */
.border {
    border: 1px solid #444 !important;
}

/* Responsive adjustments */
@media (max-width: 992px) {
    .content-main {
        padding: 1rem;
    }
    
    .row {
        flex-direction: column;
    }
    
    .col-lg-6 {
        width: 100%;
    }

    .publish-button-container {
        flex-direction: column;
    }
}

/* Additional spacing utilities */
.mb-4 {
    margin-bottom: 1.5rem;
}

.mb-2 {
    margin-bottom: 0.75rem;
}
.image-cropper {
    background-color: #333333;
    border-radius: 5px;
    padding: 1rem;
    display: none; /* Initially hidden, will be shown dynamically */
    align-items: center;
    justify-content: center;
    flex-direction: column;
}

.image-cropper img {
    max-width: 100%;
    max-height: 300px;
    border-radius: 5px;
    object-fit: cover; /* Prevents image distortion */
}

.show-cropper {
    display: flex !important; /* Ensures visibility when JS activates it */
}

#imgView1, #imgView2, #imgView3 {
    max-width: 100px;
    max-height: 100px;
    object-fit: cover;
    border-radius: 5px;
}
</style>

    
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" action="/admin/products" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <%for(let i=0;i<brand.length;i++){%>
                                        <option value="<%=brand[i].brandName%>">
                                            <%=brand[i].brandName%>
                                        </option>
                                        <%}%>
                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description"
                                    class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="₹ " name="regularPrice" type="text"
                                            class="form-control border">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input placeholder="₹" name="salePrice" type="text" class="form-control border">
                                    </div>
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input placeholder="" name="quantity" type="text" class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="mb-4"> <label class="form-label">Add Offer</label> <input
                                            placeholder="%" name="productOffer" type="number"
                                            class="form-control border" min="0" max="100"> </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-4"> <label class="form-label">Delete Offer</label> <button
                                            type="button" class="btn btn-secondary form-control"
                                            onclick="deleteOffer()">Delete Offer</button> </div>
                                </div>
                            </div>

                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <%for(let i=0;i<category.length;i++){%>
                                                    <option value="<%=category[i].name%>">
                                                        <%=category[i].name%>
                                                    </option>
                                                    <%}%>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- image-->
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <div class="border row">
                                    <div id="addedImagesContainer" class="thumbnails-container"></div>
                                </div>
                            
                                <!-- Image Input 1 -->
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView1" style="max-width: 100px; max-height: 100px;">
                                        <input class="form-control" type="file" name="images" id="input1"
                                            accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 1)">
                                        <div id="images-error" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center" id="cropContainer1"
                                        style="display:none; flex-direction: column;">
                                        <img src="" id="croppedImg1" alt="" style="width: 300px; height: 200px;">
                                        <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                            
                                <!-- Image Input 2 -->
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView2" style="max-width: 100px; max-height: 100px;">
                                        <input class="form-control" type="file" name="images" id="input2"
                                            accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 2)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center" id="cropContainer2"
                                        style="display:none; flex-direction: column;">
                                        <img src="" id="croppedImg2" alt="" style="width: 300px; height: 200px;">
                                        <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                            
                                <!-- Image Input 3 -->
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView3" style="max-width: 100px; max-height: 100px;">
                                        <input class="form-control" type="file" name="images" id="input3"
                                            accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, 3)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center" id="cropContainer3"
                                        style="display:none; flex-direction: column;">
                                        <img src="" id="croppedImg3" alt="" style="width: 300px; height: 200px;">
                                        <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="publish-button-container">
                                <button class="publish-button" type="submit" onclick="validateAndSubmit()">Publish</button>
                                <a href='/admin/products' class="btn btn-primary">Go Back</a>
                            </div>
                            

                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>


    <script>

function validateAndSubmit() {
        if (validateForm()) {
            document.forms[0].submit();
        }
    }

    function validateForm() {
        let imageDatas = false;
        console.log("validate form");
        clearErrorMessages();

        const name = document.getElementsByName('productName')[0].value;
        const description = document.getElementsByName('description')[0].value;
        const brand = document.getElementsByName('brand')[0].value;
        const price = document.getElementsByName('regularPrice')[0].value;
        const saleprice = document.getElementsByName('salePrice')[0].value;
        const category = document.getElementsByName('category')[0].value;
        const images = document.getElementById('input1');
        const quantity = document.getElementsByName('quantity')[0].value;  // Fixing this line
        imageDatas = document.getElementById("imageDatas")?.value;

        let isValid = true;

        if (name.trim() === "") {
            displayErrorMessage('productName-error', 'Please enter a product name.');
            isValid = false;
        }

        if (description.trim() === "") {
            displayErrorMessage('description-error', 'Please enter a product description.');
            isValid = false;
        }

        if (quantity.trim() === "" || parseInt(quantity) <= 0) {  // Updated condition
            displayErrorMessage('quantity-error', 'Please enter a valid quantity greater than zero.');
            isValid = false;
        }

        if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) <= 0) {  // Ensuring price is positive
            displayErrorMessage('regularPrice-error', 'Please enter a valid positive price.');
            isValid = false;
        }

        if (saleprice && (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0)) {  
            displayErrorMessage('salePrice-error', 'Please enter a valid non-negative sale price.');
            isValid = false;
        }

        if (!imageDatas && images.files.length === 0) {  // Check if any image is selected
            displayErrorMessage("images-error", 'Please select at least one image.');
            isValid = false;
        }

        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        var errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }

    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName('error-message');
        Array.from(errorElements).forEach(element => {
            element.innerText = '';
        });
    }





        document.addEventListener("DOMContentLoaded", function () {
    let croppers = {}; // Store cropper instances for each image

    function viewImage(event, index) {
        let input = event.target;
        let previewImage = document.getElementById('imgView' + index);
        let cropImage = document.getElementById('croppedImg' + index);
        let cropperContainer = cropImage.parentNode;
        let saveButton = document.getElementById('saveButton' + index);

        // Reset previous cropper if exists
        if (croppers[index]) {
            croppers[index].destroy();
        }

        let reader = new FileReader();
        reader.onload = function () {
            previewImage.src = reader.result; // Show selected image preview
            cropImage.src = reader.result; // Show the same image for cropping

            // Show the cropping container
            cropperContainer.style.display = 'flex';

            // Initialize Cropper.js on cropped image
            croppers[index] = new Cropper(cropImage, {
                aspectRatio: 1, // Adjust as needed
                viewMode: 1,
                guides: true,
                background: false,
                autoCropArea: 1,
                zoomable: true
            });
        };
        reader.readAsDataURL(input.files[0]);

        // Save cropped image
        saveButton.onclick = async function () {
            if (croppers[index]) {
                let croppedCanvas = croppers[index].getCroppedCanvas({
                    width: 300,
                    height: 500
                });

                let croppedImage = croppedCanvas.toDataURL('image/png'); // Use PNG to match file extension

                let timestamp = new Date().getTime();
                let fileName = `cropped-img-${timestamp}-${index}.png`;

                await croppedCanvas.toBlob(blob => {
                    let inputFile = document.getElementById('input' + index);
                    let imgFile = new File([blob], fileName, { type: "image/png" });
                    const fileList = new DataTransfer();
                    fileList.items.add(imgFile);
                    inputFile.files = fileList.files;
                });

                // Hide cropping UI
                cropperContainer.style.display = 'none';
                croppers[index].destroy();
            }
        };
    }

    // Attach event listeners
    document.getElementById('input1').addEventListener('change', function (event) {
        viewImage(event, 1);
    });
    document.getElementById('input2').addEventListener('change', function (event) {
        viewImage(event, 2);
    });
    document.getElementById('input3').addEventListener('change', function (event) {
        viewImage(event, 3);
    });
});



    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
  


    <%- include('../layouts/admin/footer.ejs') %>